if iter>1
    residuals(:,end+1) = zeros(4,1);
end
for i=2:cI-1  % 1: (resU), 2: (resV), 3: (resCon)
  for j=2:cJ-1
      for k = 2:cK-1
    residuals(1,end) = residuals(1,end) + abs(...
                      U(i+1,j,k,timestep)*coeffsUV(i,j,k,1)+...
                      U(i-1,j,k,timestep)*coeffsUV(i,j,k,2)+...
                      U(i,j+1,k,timestep)*coeffsUV(i,j,k,3)+...
                      U(i,j-1,k,timestep)*coeffsUV(i,j,k,4)+...
                      U(i,j,k+1,timestep)*coeffsUV(i,j,k,5)+...
                      U(i,j,k-1,timestep)*coeffsUV(i,j,k,6)+...
                      U(i,j,k,timestep-1)*coeffsUV(i,j,k,7)-...
                      (coeffsUV(i,j,k,8))*U(i,j,k,timestep)+...
                      sourceUV(i,j,k,1));
    residuals(3,end) = residuals(2,end) + abs(...
                      V(i+1,j,k,timestep)*coeffsUV(i,j,k,1)+...
                      V(i-1,j,k,timestep)*coeffsUV(i,j,k,2)+...
                      V(i,j+1,k,timestep)*coeffsUV(i,j,k,3)+...
                      V(i,j-1,k,timestep)*coeffsUV(i,j,k,4)+...
                      V(i,j,k+1,timestep)*coeffsUV(i,j,k,5)+...
                      V(i,j,k-1,timestep)*coeffsUV(i,j,k,6)+...
                      V(i,j,k,timestep-1)*coeffsUV(i,j,k,7)-...
                      (coeffsUV(i,j,k,8))*V(i,j,k,timestep)+...
                      sourceUV(i,j,k,2));
    residuals(3,end) = residuals(3,end) + abs(...
                      W(i+1,j,k,timestep)*coeffsUV(i,j,k,1)+...
                      W(i-1,j,k,timestep)*coeffsUV(i,j,k,2)+...
                      W(i,j+1,k,timestep)*coeffsUV(i,j,k,3)+...
                      W(i,j-1,k,timestep)*coeffsUV(i,j,k,4)+...
                      W(i,j,k+1,timestep)*coeffsUV(i,j,k,5)+...
                      W(i,j,k-1,timestep)*coeffsUV(i,j,k,6)+...
                      W(i,j,k,timestep-1)*coeffsUV(i,j,k,7)-...
                      (coeffsUV(i,j,k,8))*W(i,j,k,timestep)+...
                      sourceUV(i,j,k,3));
                    
    residuals(4,end) = residuals(4,end) + abs(DeltaF(i,j,k));
      end
  end
end
% Check convergence
converged = true;
for i=1:size(residuals,1)
    if resTolerance<residuals(i,end)
        converged = false;
        break;
    end
end